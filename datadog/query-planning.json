{
  "title": "RR-68: Query Planning Metrics",
  "description": "[[suggested_dashboards]]",
  "widgets": [
    {
      "id": 1355103844861603,
      "definition": {
        "title": "Query Planning",
        "background_color": "white",
        "show_title": true,
        "type": "group",
        "layout_type": "ordered",
        "widgets": [
          {
            "id": 942676723835878,
            "definition": {
              "type": "note",
              "content": "The query planner is the heart of the runtime's computational efforts. This is where a request to your supergraph is translated into an invocation plan for the appropriate underlying subgraphs. Its performance will be very closely correlated to your supergraph schema and request characteristics, and will be the other determining factor in your response times beyond the subgraphs themselves.",
              "background_color": "white",
              "font_size": "14",
              "text_align": "left",
              "vertical_align": "top",
              "show_tick": false,
              "tick_pos": "50%",
              "tick_edge": "left",
              "has_padding": true
            },
            "layout": {
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 1
            }
          },
          {
            "id": 7301212877184944,
            "definition": {
              "title": "Duration and Wait Time",
              "title_size": "16",
              "title_align": "left",
              "show_legend": true,
              "legend_layout": "auto",
              "legend_columns": [
                "avg",
                "min",
                "max",
                "value",
                "sum"
              ],
              "type": "timeseries",
              "requests": [
                {
                  "response_format": "timeseries",
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query2",
                      "query": "avg:apollo.router.compute_jobs.execution.duration{service:$service.value,env:$env.value,version:$version.value ,job.type:query_planning}"
                    },
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "max:apollo.router.compute_jobs.execution.duration{service:$service.value,env:$env.value,version:$version.value , job.type:query_planning}"
                    },
                    {
                      "data_source": "metrics",
                      "name": "query3",
                      "query": "avg:apollo.router.compute_jobs.queue.wait.duration{service:$service.value,env:$env.value,version:$version.value , job.type:query_planning}"
                    },
                    {
                      "data_source": "metrics",
                      "name": "query4",
                      "query": "max:apollo.router.compute_jobs.queue.wait.duration{service:$service.value,env:$env.value,version:$version.value , job.type:query_planning}"
                    }
                  ],
                  "formulas": [
                    {
                      "number_format": {
                        "unit": {
                          "type": "canonical_unit",
                          "unit_name": "second"
                        }
                      },
                      "alias": "avg execution duration",
                      "formula": "query2"
                    },
                    {
                      "number_format": {
                        "unit": {
                          "type": "canonical_unit",
                          "unit_name": "second"
                        }
                      },
                      "alias": "max execution duration",
                      "formula": "query1"
                    },
                    {
                      "number_format": {
                        "unit": {
                          "type": "canonical_unit",
                          "unit_name": "second"
                        }
                      },
                      "alias": "avg wait time",
                      "formula": "query3"
                    },
                    {
                      "number_format": {
                        "unit": {
                          "type": "canonical_unit",
                          "unit_name": "second"
                        }
                      },
                      "alias": "max wait time",
                      "formula": "query4"
                    }
                  ],
                  "style": {
                    "palette": "dog_classic",
                    "order_by": "tags",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "line"
                },
                {
                  "formulas": [
                    {
                      "alias": "schema reload",
                      "formula": "query1"
                    }
                  ],
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "sum:apollo.router.schema.load.duration.count{service:$service.value,env:$env.value,version:$version.value}.as_count()"
                    }
                  ],
                  "response_format": "timeseries",
                  "style": {
                    "palette": "gray",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "overlay"
                },
                {
                  "formulas": [
                    {
                      "alias": "cache warmup",
                      "formula": "query1"
                    }
                  ],
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "sum:apollo.router.query_planning.warmup.duration.count{service:$service.value,env:$env.value,version:$version.value}.as_count()"
                    }
                  ],
                  "response_format": "timeseries",
                  "style": {
                    "palette": "gray",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "overlay"
                }
              ],
              "yaxis": {
                "include_zero": true,
                "scale": "sqrt"
              }
            },
            "layout": {
              "x": 0,
              "y": 1,
              "width": 6,
              "height": 4
            }
          },
          {
            "id": 3371314754887370,
            "definition": {
              "title": "Evaluated Plans",
              "title_size": "16",
              "title_align": "left",
              "show_legend": true,
              "legend_layout": "auto",
              "legend_columns": [
                "avg",
                "min",
                "max",
                "value",
                "sum"
              ],
              "time": {},
              "type": "timeseries",
              "requests": [
                {
                  "response_format": "timeseries",
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query2",
                      "query": "avg:apollo.router.query_planning.plan.evaluated_plans{$service, $env, $version}"
                    },
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "max:apollo.router.query_planning.plan.evaluated_plans{$service, $env, $version}"
                    }
                  ],
                  "formulas": [
                    {
                      "number_format": {},
                      "alias": "average evaluated",
                      "formula": "anomalies(query2, 'basic', 2)"
                    },
                    {
                      "number_format": {},
                      "alias": "max evaluated",
                      "formula": "query1"
                    }
                  ],
                  "style": {
                    "palette": "dog_classic",
                    "order_by": "tags",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "line"
                },
                {
                  "formulas": [
                    {
                      "alias": "schema reload",
                      "formula": "query1"
                    }
                  ],
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "sum:apollo.router.schema.load.duration.count{service:$service.value,env:$env.value,version:$version.value}.as_count()"
                    }
                  ],
                  "response_format": "timeseries",
                  "style": {
                    "palette": "gray",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "overlay"
                },
                {
                  "formulas": [
                    {
                      "alias": "cache warmup",
                      "formula": "query1"
                    }
                  ],
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "sum:apollo.router.query_planning.warmup.duration.count{service:$service.value,env:$env.value,version:$version.value}.as_count()"
                    }
                  ],
                  "response_format": "timeseries",
                  "style": {
                    "palette": "gray",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "overlay"
                }
              ],
              "yaxis": {
                "include_zero": true,
                "scale": "sqrt"
              }
            },
            "layout": {
              "x": 6,
              "y": 1,
              "width": 6,
              "height": 4
            }
          },
          {
            "id": 8368245832144593,
            "definition": {
              "type": "note",
              "content": "This chart tracks the wait and execution durations for query planning jobs over time.\n\n**Why it matters**\n\n-   Query planning is critical to routing — delays here increase end-to-end latency.\n-   Schema or configuration changes can unexpectedly impact planning performance.\n-   High max durations may point to specific queries performing poorly in the planner.\n\n**What to look for**\n\n-   Low, stable execution times indicate efficient planning.\n-   Spikes in max duration could signal complex or inefficient queries.\n-   Rising trends after deployments or schema changes may require investigation.\n\n\nFor deeper analysis of poorly performing queries, review [query planning best practices](https://www.apollographql.com/docs/graphos/routing/query-planning/query-planning-best-practices).",
              "background_color": "yellow",
              "font_size": "14",
              "text_align": "left",
              "vertical_align": "center",
              "show_tick": true,
              "tick_pos": "50%",
              "tick_edge": "top",
              "has_padding": true
            },
            "layout": {
              "x": 0,
              "y": 5,
              "width": 6,
              "height": 2
            }
          },
          {
            "id": 3057614794403403,
            "definition": {
              "type": "note",
              "content": "This chart shows how many query plans are evaluated before selecting the optimal one for a request.\n\n**Why it matters**\n-   Fewer evaluated plans mean faster query planning and consequently lower CPU usage and response latency.\n\n**What to look for**\n\n-   An average near 1 is ideal — it means the planner is doing the minimal possible work per request.\n-   Occasional spikes in max are expected, but frequent or rising values may indicate overly complex queries.\n-   Sustained increases above 1 could suggest a need to revisit schema design or client queries.",
              "background_color": "yellow",
              "font_size": "14",
              "text_align": "left",
              "vertical_align": "center",
              "show_tick": true,
              "tick_pos": "50%",
              "tick_edge": "top",
              "has_padding": true
            },
            "layout": {
              "x": 6,
              "y": 5,
              "width": 6,
              "height": 2
            }
          }
        ]
      },
      "layout": {
        "x": 0,
        "y": 0,
        "width": 12,
        "height": 8
      }
    },
    {
      "id": 3027455303862458,
      "definition": {
        "title": "Compute Jobs",
        "background_color": "white",
        "show_title": true,
        "type": "group",
        "layout_type": "ordered",
        "widgets": [
          {
            "id": 7402516847608650,
            "definition": {
              "type": "note",
              "content": "Compute jobs are CPU-intensive tasks that get managed on a dedicated thread pool, inclusive of query planning tasks. Non-query-planning tasks tend to be either low-cost (in the case of query parsing) or infrequent to nonexistent (in the case of introspection resolution) and are consequently less commonly a performance pain point. Most diagnosis will be done against the query planning metrics directly, but this section is provided for informational purposes.",
              "background_color": "white",
              "font_size": "14",
              "text_align": "left",
              "vertical_align": "top",
              "show_tick": false,
              "tick_pos": "50%",
              "tick_edge": "left",
              "has_padding": true
            },
            "layout": {
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 1
            }
          },
          {
            "id": 2646683015980845,
            "definition": {
              "title": "Queued Jobs",
              "title_size": "16",
              "title_align": "left",
              "show_legend": false,
              "legend_layout": "auto",
              "legend_columns": [
                "avg",
                "min",
                "max",
                "value",
                "sum"
              ],
              "type": "timeseries",
              "requests": [
                {
                  "response_format": "timeseries",
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "sum:apollo.router.compute_jobs.queued{service:$service.value,env:$env.value,version:$version.value}"
                    }
                  ],
                  "formulas": [
                    {
                      "formula": "query1"
                    },
                    {
                      "alias": "queued jobs",
                      "formula": "query1 * 1000"
                    }
                  ],
                  "style": {
                    "palette": "dog_classic",
                    "order_by": "values",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "bars"
                },
                {
                  "formulas": [
                    {
                      "alias": "schema reload",
                      "formula": "query1"
                    }
                  ],
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "sum:apollo.router.schema.load.duration.count{service:$service.value,env:$env.value,version:$version.value}.as_count()"
                    }
                  ],
                  "response_format": "timeseries",
                  "style": {
                    "palette": "gray",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "overlay"
                }
              ]
            },
            "layout": {
              "x": 0,
              "y": 1,
              "width": 4,
              "height": 3
            }
          },
          {
            "id": 1568178430355607,
            "definition": {
              "title": "Introspection Avg Duration and Wait Time",
              "title_size": "16",
              "title_align": "left",
              "show_legend": true,
              "legend_layout": "auto",
              "legend_columns": [
                "avg",
                "min",
                "max",
                "value",
                "sum"
              ],
              "type": "timeseries",
              "requests": [
                {
                  "response_format": "timeseries",
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "avg:apollo.router.compute_jobs.execution.duration{service:$service.value,env:$env.value,version:$version.value, job.type:introspection}"
                    },
                    {
                      "data_source": "metrics",
                      "name": "query3",
                      "query": "avg:apollo.router.compute_jobs.queue.wait.duration{service:$service.value,env:$env.value,version:$version.value ,job.type:introspection}"
                    }
                  ],
                  "formulas": [
                    {
                      "number_format": {
                        "unit": {
                          "type": "canonical_unit",
                          "unit_name": "second"
                        }
                      },
                      "alias": "avg execution duration",
                      "formula": "query1"
                    },
                    {
                      "number_format": {
                        "unit": {
                          "type": "canonical_unit",
                          "unit_name": "second"
                        }
                      },
                      "alias": "avg wait time",
                      "formula": "query3"
                    }
                  ],
                  "style": {
                    "palette": "dog_classic",
                    "order_by": "tags",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "line"
                },
                {
                  "formulas": [
                    {
                      "alias": "schema reload",
                      "formula": "query1"
                    }
                  ],
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "sum:apollo.router.schema.load.duration.count{service:$service.value,env:$env.value,version:$version.value}.as_count()"
                    }
                  ],
                  "response_format": "timeseries",
                  "style": {
                    "palette": "gray",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "overlay"
                },
                {
                  "formulas": [
                    {
                      "alias": "cache warmup",
                      "formula": "query1"
                    }
                  ],
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "sum:apollo.router.query_planning.warmup.duration.count{service:$service.value,env:$env.value,version:$version.value}.as_count()"
                    }
                  ],
                  "response_format": "timeseries",
                  "style": {
                    "palette": "gray",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "overlay"
                }
              ],
              "yaxis": {
                "include_zero": true,
                "scale": "sqrt"
              }
            },
            "layout": {
              "x": 4,
              "y": 1,
              "width": 4,
              "height": 3
            }
          },
          {
            "id": 6504562094582051,
            "definition": {
              "title": "Query Parsing Avg Duration and Wait Time",
              "title_size": "16",
              "title_align": "left",
              "show_legend": true,
              "legend_layout": "auto",
              "legend_columns": [
                "avg",
                "min",
                "max",
                "value",
                "sum"
              ],
              "type": "timeseries",
              "requests": [
                {
                  "response_format": "timeseries",
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "avg:apollo.router.compute_jobs.execution.duration{service:$service.value,env:$env.value,version:$version.value, job.type:query_parsing}"
                    },
                    {
                      "data_source": "metrics",
                      "name": "query3",
                      "query": "avg:apollo.router.compute_jobs.queue.wait.duration{service:$service.value,env:$env.value,version:$version.value ,job.type:query_parsing}"
                    }
                  ],
                  "formulas": [
                    {
                      "number_format": {
                        "unit": {
                          "type": "canonical_unit",
                          "unit_name": "second"
                        }
                      },
                      "alias": "avg execution duration",
                      "formula": "query1"
                    },
                    {
                      "number_format": {
                        "unit": {
                          "type": "canonical_unit",
                          "unit_name": "second"
                        }
                      },
                      "alias": "avg wait time",
                      "formula": "query3"
                    }
                  ],
                  "style": {
                    "palette": "dog_classic",
                    "order_by": "tags",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "line"
                },
                {
                  "formulas": [
                    {
                      "alias": "schema reload",
                      "formula": "query1"
                    }
                  ],
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "sum:apollo.router.schema.load.duration.count{service:$service.value,env:$env.value,version:$version.value}.as_count()"
                    }
                  ],
                  "response_format": "timeseries",
                  "style": {
                    "palette": "gray",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "overlay"
                },
                {
                  "formulas": [
                    {
                      "alias": "cache warmup",
                      "formula": "query1"
                    }
                  ],
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "sum:apollo.router.query_planning.warmup.duration.count{service:$service.value,env:$env.value,version:$version.value}.as_count()"
                    }
                  ],
                  "response_format": "timeseries",
                  "style": {
                    "palette": "gray",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "overlay"
                }
              ],
              "yaxis": {
                "include_zero": true,
                "scale": "sqrt"
              }
            },
            "layout": {
              "x": 8,
              "y": 1,
              "width": 4,
              "height": 3
            }
          },
          {
            "id": 5923077997925504,
            "definition": {
              "type": "note",
              "content": "This chart tracks the depth of the compute job queue over time, showing how many jobs are waiting to be processed.\n\n**Why it matters:**\n\n* A non-zero queue means jobs are backing up, introducing latency for any requests that depend on them.\n* Sustained queuing often points to CPU bottlenecks or insufficient compute capacity.\n* Helps identify runtime saturation under load.\n\n**What to look for**\n\n* A consistently empty queue is ideal — jobs are being processed as they arrive.\n* Short spikes can be normal during brief load surges.\n* Sustained nonzero periods may require scaling CPU resources or optimizing workload.",
              "background_color": "yellow",
              "font_size": "14",
              "text_align": "left",
              "vertical_align": "center",
              "show_tick": true,
              "tick_pos": "50%",
              "tick_edge": "top",
              "has_padding": true
            },
            "layout": {
              "x": 0,
              "y": 4,
              "width": 4,
              "height": 2
            }
          },
          {
            "id": 4800289724652787,
            "definition": {
              "type": "note",
              "content": "While we [do not recommend enabling Introspection in Production](https://www.apollographql.com/blog/why-you-should-disable-graphql-introspection-in-production), if you do have it enabled you can see the compute cost of such queries against your supergraph here.",
              "background_color": "yellow",
              "font_size": "14",
              "text_align": "left",
              "vertical_align": "center",
              "show_tick": true,
              "tick_pos": "50%",
              "tick_edge": "top",
              "has_padding": true
            },
            "layout": {
              "x": 4,
              "y": 4,
              "width": 4,
              "height": 2
            }
          },
          {
            "id": 6257474700798550,
            "definition": {
              "type": "note",
              "content": "This chart tracks how long query parsing jobs take to execute, and how long they wait in the queue before starting.\n\n**Why it matters:**\n\n-   Long execution times can point to expensive or malformed queries.\n-   High wait times indicate the system is queuing work faster than it can process it — a sign of CPU pressure or under-provisioning.\n-   Parsing is part of the critical request path, so delays here directly impact overall latency.\n\n**What to look for**\n\n-   Stable, low execution and wait times suggest healthy parsing performance.\n-   Spikes in execution time may reflect incoming query complexity or anomalies.\n-   Persistent wait time increases likely mean you need to scale compute or investigate query patterns.",
              "background_color": "yellow",
              "font_size": "14",
              "text_align": "left",
              "vertical_align": "center",
              "show_tick": true,
              "tick_pos": "50%",
              "tick_edge": "top",
              "has_padding": true
            },
            "layout": {
              "x": 8,
              "y": 4,
              "width": 4,
              "height": 2
            }
          },
          {
            "id": 3496774608895013,
            "definition": {
              "title": "Job Counts by Outcome",
              "title_size": "16",
              "title_align": "left",
              "show_legend": true,
              "legend_layout": "auto",
              "legend_columns": [
                "avg",
                "min",
                "max",
                "value",
                "sum"
              ],
              "type": "timeseries",
              "requests": [
                {
                  "response_format": "timeseries",
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "count:apollo.router.compute_jobs.duration{service:$service.value,env:$env.value,version:$version.value} by {job.outcome}.as_count()"
                    }
                  ],
                  "formulas": [
                    {
                      "formula": "query1"
                    }
                  ],
                  "style": {
                    "palette": "dog_classic",
                    "order_by": "values",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "bars"
                },
                {
                  "formulas": [
                    {
                      "alias": "schema reload",
                      "formula": "query1"
                    }
                  ],
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "sum:apollo.router.schema.load.duration.count{service:$service.value,env:$env.value,version:$version.value}.as_count()"
                    }
                  ],
                  "response_format": "timeseries",
                  "style": {
                    "palette": "gray",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "overlay"
                }
              ]
            },
            "layout": {
              "x": 0,
              "y": 6,
              "width": 8,
              "height": 3
            }
          },
          {
            "id": 8647054076741359,
            "definition": {
              "type": "note",
              "content": "This chart shows the total number of compute jobs actively running in your runtime, broken down by success or failure status.\n\n**Why it matters**\n-   Failed jobs may indicate internal issues, misconfigurations, or upstream errors.\n-   Monitoring execution volume helps assess load and throughput.\n\n**What to look for**\n\n-   A steady level of `executed_ok` jobs.\n-   Any presence of failed job types (`executed_error`, `rejected_queue_full`, etc.).",
              "background_color": "yellow",
              "font_size": "14",
              "text_align": "left",
              "vertical_align": "center",
              "show_tick": true,
              "tick_pos": "50%",
              "tick_edge": "left",
              "has_padding": true
            },
            "layout": {
              "x": 8,
              "y": 6,
              "width": 4,
              "height": 3
            }
          }
        ]
      },
      "layout": {
        "x": 0,
        "y": 8,
        "width": 12,
        "height": 10,
        "is_column_break": true
      }
    }
  ],
  "template_variables": [
    {
      "name": "service",
      "prefix": "service",
      "available_values": [],
      "default": "router"
    },
    {
      "name": "env",
      "prefix": "env",
      "available_values": [],
      "default": "prod"
    },
    {
      "name": "version",
      "prefix": "version",
      "available_values": [],
      "default": "*"
    }
  ],
  "layout_type": "ordered",
  "notify_list": [],
  "reflow_type": "fixed",
  "tags": [
    "team:runtime-readiness"
  ]
}
