{
  "title": "RR-69: Coprocessor Metrics",
  "description": "[[suggested_dashboards]]",
  "widgets": [
    {
      "id": 7179021198358280,
      "definition": {
        "title": "Coprocessors",
        "background_color": "white",
        "show_title": true,
        "type": "group",
        "layout_type": "ordered",
        "widgets": [
          {
            "id": 2752267629213285,
            "definition": {
              "type": "note",
              "content": "If you incorporate [coprocessors](https://www.apollographql.com/docs/graphos/routing/customization/coprocessor) into your runtime, these metrics will be emitted. They indicate basic health and performance impact of the coprocessors on your request lifecycle. In order to correlate any issues we highly recommend you add your own instrumentation to this section to include any health and performance metrics specific to the coprocessors you run and their own request lifecyle.",
              "background_color": "white",
              "font_size": "14",
              "text_align": "left",
              "vertical_align": "top",
              "show_tick": false,
              "tick_pos": "50%",
              "tick_edge": "left",
              "has_padding": true
            },
            "layout": {
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 1
            }
          },
          {
            "id": 7202644430123243,
            "definition": {
              "title": "Request Duration",
              "title_size": "16",
              "title_align": "left",
              "show_legend": true,
              "legend_layout": "auto",
              "legend_columns": [
                "avg",
                "min",
                "max",
                "value",
                "sum"
              ],
              "type": "timeseries",
              "requests": [
                {
                  "response_format": "timeseries",
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "avg:apollo.router.operations.coprocessor.duration{service:$service.value,env:$env.value,version:$version.value} by {coprocessor.stage}"
                    }
                  ],
                  "formulas": [
                    {
                      "formula": "query1"
                    }
                  ],
                  "style": {
                    "palette": "dog_classic",
                    "order_by": "values",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "line"
                }
              ]
            },
            "layout": {
              "x": 0,
              "y": 1,
              "width": 4,
              "height": 4
            }
          },
          {
            "id": 8422381032516479,
            "definition": {
              "title": "Request Count",
              "title_size": "16",
              "title_align": "left",
              "show_legend": true,
              "legend_layout": "auto",
              "legend_columns": [
                "avg",
                "min",
                "max",
                "value",
                "sum"
              ],
              "type": "timeseries",
              "requests": [
                {
                  "response_format": "timeseries",
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query0",
                      "query": "sum:apollo.router.operations.coprocessor{service:$service.value,env:$env.value,version:$version.value} by {coprocessor.stage}.as_count()"
                    }
                  ],
                  "formulas": [
                    {
                      "alias": "coprocessor request count",
                      "formula": "query0"
                    }
                  ],
                  "style": {
                    "palette": "dog_classic",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "bars"
                }
              ]
            },
            "layout": {
              "x": 4,
              "y": 1,
              "width": 4,
              "height": 4
            }
          },
          {
            "id": 1752147216961256,
            "definition": {
              "title": "Success Rate",
              "title_size": "16",
              "title_align": "left",
              "show_legend": true,
              "legend_layout": "auto",
              "legend_columns": [
                "avg",
                "min",
                "max",
                "value",
                "sum"
              ],
              "time": {},
              "type": "timeseries",
              "requests": [
                {
                  "response_format": "timeseries",
                  "queries": [
                    {
                      "data_source": "metrics",
                      "name": "query0",
                      "query": "sum:apollo.router.operations.coprocessor{service:$service.value,env:$env.value,version:$version.value, coprocessor.succeeded:true} by {coprocessor.stage}.as_count()"
                    },
                    {
                      "data_source": "metrics",
                      "name": "query1",
                      "query": "sum:apollo.router.operations.coprocessor{service:$service.value,env:$env.value,version:$version.value} by {coprocessor.stage}.as_count()"
                    }
                  ],
                  "formulas": [
                    {
                      "alias": "coprocessor success rate",
                      "number_format": {
                        "unit": {
                          "type": "canonical_unit",
                          "unit_name": "percent"
                        }
                      },
                      "formula": "anomalies((query0 / query1) * 100, 'basic', 1)"
                    }
                  ],
                  "style": {
                    "palette": "dog_classic",
                    "line_type": "solid",
                    "line_width": "normal"
                  },
                  "display_type": "line"
                }
              ],
              "yaxis": {
                "include_zero": true
              }
            },
            "layout": {
              "x": 8,
              "y": 1,
              "width": 4,
              "height": 4
            }
          },
          {
            "id": 7167731681168763,
            "definition": {
              "type": "note",
              "content": "This chart shows the average duration added by coprocessor invocations at each stage of the request lifecycle.\n\n**Why it matters**\n\n-   Coprocessors introduce additional network calls — even fast ones add latency.\n-   High or rising durations can affect overall request performance.\n-   Each stage (e.g., request, supergraph, subgraph) may have different performance profiles depending on configuration and coprocessor logic.\n\n**What to look for**\n\n-   Low, stable durations suggest efficient coprocessor behavior.\n-   Spikes may indicate backend slowness, increased payload size, or external service degradation.",
              "background_color": "yellow",
              "font_size": "14",
              "text_align": "left",
              "vertical_align": "center",
              "show_tick": true,
              "tick_pos": "50%",
              "tick_edge": "top",
              "has_padding": true
            },
            "layout": {
              "x": 0,
              "y": 5,
              "width": 4,
              "height": 2
            }
          },
          {
            "id": 8612773097510573,
            "definition": {
              "type": "note",
              "content": "This chart breaks down how often coprocessors are invoked at each stage of the request lifecycle.\n\n**Why it matters**\n\n-   Helps validate where and how often your coprocessors are engaged.\n-   Useful for confirming configuration and understanding the load placed on each external service.\n-   Invocation patterns typically align with overall request volume, but may vary by routing logic or stage-specific conditions.\n\n**What to look for**\n\n-   Consistent counts per stage indicate expected behavior.\n-   Unexpected drops or surges may reflect routing changes, config issues, or stage-specific errors.",
              "background_color": "yellow",
              "font_size": "14",
              "text_align": "left",
              "vertical_align": "center",
              "show_tick": true,
              "tick_pos": "50%",
              "tick_edge": "top",
              "has_padding": true
            },
            "layout": {
              "x": 4,
              "y": 5,
              "width": 4,
              "height": 2
            }
          },
          {
            "id": 3453193672865711,
            "definition": {
              "type": "note",
              "content": "This chart tracks the success rate of coprocessor invocations across each stage of the request lifecycle.\n\n**Why it matters**\n\n-   Coprocessors are on the critical path — failures here can short-circuit requests before they reach subgraphs.\n-   A drop in success rate will correlate with elevated error responses at the supergraph level.\n-   Helps isolate external causes of failure when subgraphs appear healthy.\n\n**What to look for**\n\n-   A consistent 100% success rate is expected for stable, production-grade coprocessors.\n-   Any dip may signal availability issues, timeouts, or bugs in coprocessor logic.\n-   If supergraph error rates rise while subgraphs remain unaffected, investigate this metric as a potential root cause.",
              "background_color": "yellow",
              "font_size": "14",
              "text_align": "left",
              "vertical_align": "center",
              "show_tick": true,
              "tick_pos": "50%",
              "tick_edge": "top",
              "has_padding": true
            },
            "layout": {
              "x": 8,
              "y": 5,
              "width": 4,
              "height": 2
            }
          }
        ]
      },
      "layout": {
        "x": 0,
        "y": 0,
        "width": 12,
        "height": 8
      }
    }
  ],
  "template_variables": [
    {
      "name": "service",
      "prefix": "service",
      "available_values": [],
      "default": "router"
    },
    {
      "name": "env",
      "prefix": "env",
      "available_values": [],
      "default": "prod"
    },
    {
      "name": "version",
      "prefix": "version",
      "available_values": [],
      "default": "*"
    }
  ],
  "layout_type": "ordered",
  "notify_list": [],
  "reflow_type": "fixed",
  "tags": [
    "team:runtime-readiness"
  ]
}
